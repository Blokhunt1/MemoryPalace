@using MemoryPalaceApp.Services
@using MemoryPalaceApp.Models
@inject TokenProvider TokenProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <p>Determining session state, please wait...</p>
                </Authorizing>
                <NotAuthorized>
                    <PageTitle>Access Denied</PageTitle>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <p>You are not authorized to access this page. Please <a href="/login">login</a>.</p>
                    </LayoutView>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Parameter]
    public InitialApplicationState? InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        if (InitialState != null)
        {
            TokenProvider.AccessToken = InitialState.AccessToken;
            TokenProvider.IdToken = InitialState.IdToken;
            TokenProvider.RefreshToken = InitialState.RefreshToken;
        }

        return base.OnInitializedAsync();
    }
}